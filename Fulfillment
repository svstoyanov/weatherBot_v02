// See https://github.com/dialogflow/dialogflow-fulfillment-nodejs
// for Dialogflow fulfillment library docs, samples, and to report issues

// Get key from worldweatheronline.com and change 'YOUR API KEY' with the genrated one on line 13
'use strict';

const functions = require('firebase-functions');
const {WebhookClient} = require('dialogflow-fulfillment');
const {Card, Suggestion} = require('dialogflow-fulfillment');

const http = require('http');
const host = 'api.worldweatheronline.com';
const wwoApiKey = 'YOUR API KEY';

process.env.DEBUG = 'dialogflow:debug'; // enables lib debugging statements

function callWeatherApi (city, date) {
 return new Promise((resolve, reject) => {
   // Create the path for the HTTP request to get the weather
   let path = '/premium/v1/weather.ashx?format=json&num_of_days=1' +
     '&q=' + encodeURIComponent(city) + '&key=' + wwoApiKey + '&date=' + date;
   console.log('API Request: ' + host + path);
   // Make the HTTP request to get the weather
   http.get({host: host, path: path}, (res) => {
     let body = ''; // var to store the response chunks
     res.on('data', (d) => { body += d; }); // store each response chunk
     res.on('end', () => {
       // After all the data has been received parse the JSON for desired data
       let response = JSON.parse(body);
       let forecast = response['data']['weather'][0];
       let location = response['data']['request'][0];
       let conditions = response['data']['current_condition'][0];
       let currentConditions = conditions['weatherDesc'][0]['value'];
       // Create response
       let output = `Current conditions in the ${location['type']}
       ${location['query']} are ${currentConditions} with a projected high of
       ${forecast['maxtempC']}째C or ${forecast['maxtempF']}째F and a low of
       ${forecast['mintempC']}째C or ${forecast['mintempF']}째F on
       ${forecast['date']}.`;
       // Resolve the promise with the output text
       console.log(output);
       resolve(output);
     });
     res.on('error', (error) => {
       reject(error);
     });
   });
 });
}

exports.dialogflowFirebaseFulfillment = functions.https.onRequest((request, response) => {
  const agent = new WebhookClient({ request, response });

    let city = request.body.queryResult.parameters['geo-city']; // city is a required param
    // Get the date for the weather forecast (if present)
    let date = '';
    if (request.body.queryResult.parameters['date']) {
      date = request.body.queryResult.parameters['date'];
      console.log('Date: ' + date);
    }
    // Call the weather API
    callWeatherApi(city, date).then((output) => {
      // Return the results of the weather API to Dialogflow
      response.json({ 'fulfillmentText': output });
    }).catch((error) => {
      // If there is an error let the user kno
      response.json({ 'fulfillmentText': error });
    });
});
